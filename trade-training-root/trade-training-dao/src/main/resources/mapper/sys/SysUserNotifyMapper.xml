<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.trade.training.mapper.sys.SysUserNotifyMapper">
  <resultMap id="BaseResultMap" type="com.trade.training.model.entity.sys.SysUserNotify">
    <id column="notify_id" jdbcType="BIGINT" property="notifyId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="describe" jdbcType="VARCHAR" property="describe" />
    <result column="type_id" jdbcType="SMALLINT" property="typeId" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="relative_id" jdbcType="BIGINT" property="relativeId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    notify_id, user_id, title, `describe`, type_id, `status`, relative_id, create_time
  </sql>
  <select id="selectByExample" parameterType="com.trade.training.model.entity.sys.SysUserNotifyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_user_notify
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_user_notify
    where notify_id = #{notifyId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_user_notify
    where notify_id = #{notifyId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.trade.training.model.entity.sys.SysUserNotifyExample">
    delete from sys_user_notify
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="notify_id" keyProperty="notifyId" parameterType="com.trade.training.model.entity.sys.SysUserNotify" useGeneratedKeys="true">
    insert into sys_user_notify (user_id, title, `describe`, 
      type_id, `status`, relative_id, 
      create_time)
    values (#{userId,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{describe,jdbcType=VARCHAR}, 
      #{typeId,jdbcType=SMALLINT}, #{status,jdbcType=TINYINT}, #{relativeId,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="notify_id" keyProperty="notifyId" parameterType="com.trade.training.model.entity.sys.SysUserNotify" useGeneratedKeys="true">
    insert into sys_user_notify
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="describe != null">
        `describe`,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="relativeId != null">
        relative_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="describe != null">
        #{describe,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=SMALLINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="relativeId != null">
        #{relativeId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.trade.training.model.entity.sys.SysUserNotifyExample" resultType="java.lang.Long">
    select count(*) from sys_user_notify
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_user_notify
    <set>
      <if test="record.notifyId != null">
        notify_id = #{record.notifyId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.describe != null">
        `describe` = #{record.describe,jdbcType=VARCHAR},
      </if>
      <if test="record.typeId != null">
        type_id = #{record.typeId,jdbcType=SMALLINT},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.relativeId != null">
        relative_id = #{record.relativeId,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_user_notify
    set notify_id = #{record.notifyId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR},
      `describe` = #{record.describe,jdbcType=VARCHAR},
      type_id = #{record.typeId,jdbcType=SMALLINT},
      `status` = #{record.status,jdbcType=TINYINT},
      relative_id = #{record.relativeId,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.trade.training.model.entity.sys.SysUserNotify">
    update sys_user_notify
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="describe != null">
        `describe` = #{describe,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=SMALLINT},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="relativeId != null">
        relative_id = #{relativeId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where notify_id = #{notifyId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.trade.training.model.entity.sys.SysUserNotify">
    update sys_user_notify
    set user_id = #{userId,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      `describe` = #{describe,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=SMALLINT},
      `status` = #{status,jdbcType=TINYINT},
      relative_id = #{relativeId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where notify_id = #{notifyId,jdbcType=BIGINT}
  </update>
</mapper>